

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 08 23:37:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 05/05/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K50 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _ANSELA	set	3931
    51  0000                     _TRISCbits	set	3988
    52  0000                     _LATC	set	3979
    53  0000                     _PORTD	set	3971
    54  0000                     _TRISD	set	3989
    55  0000                     _LATD	set	3980
    56  0000                     _LATCbits	set	3979
    57  0000                     _PORTAbits	set	3968
    58  0000                     _LATAbits	set	3977
    59  0000                     _OSCCON	set	4051
    60  0000                     _TRISA	set	3986
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  007FA8                     __pcinit:
    66                           	callstack 0
    67  007FA8                     start_initialization:
    68                           	callstack 0
    69  007FA8                     __initialization:
    70                           	callstack 0
    71  007FA8                     end_of_initialization:
    72                           	callstack 0
    73  007FA8                     __end_of__initialization:
    74                           	callstack 0
    75  007FA8  0E00               	movlw	low (__Lmediumconst shr (0+16))
    76  007FAA  6EF8               	movwf	tblptru,c
    77  007FAC  0100               	movlb	0
    78  007FAE  EFD9  F03F         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81  000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83  000001                     LCD_cmd@cx:
    84                           	callstack 0
    85                           
    86                           ; 1 bytes @ 0x0
    87  000001                     	ds	1
    88  000002                     
    89                           ; 1 bytes @ 0x1
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 64 in file "main.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2, cstack
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   109 ;;      Params:         0       0       0       0       0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0       0       0
   111 ;;      Temps:          0       0       0       0       0       0       0       0       0
   112 ;;      Totals:         0       0       0       0       0       0       0       0       0
   113 ;;Total ram usage:        0 bytes
   114 ;; Hardware stack levels required when called: 2
   115 ;; This function calls:
   116 ;;		_LCD_init
   117 ;;		_portsInit
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  007FB2                     __ptext0:
   125                           	callstack 0
   126  007FB2                     _main:
   127                           	callstack 29
   128  007FB2                     
   129                           ;main.c: 65:     portsInit();
   130  007FB2  ECDF  F03F         	call	_portsInit	;wreg free
   131                           
   132                           ;main.c: 66:     LCD_init();
   133  007FB6  ECF1  F03F         	call	_LCD_init	;wreg free
   134  007FBA  EF00  F000         	goto	start
   135  007FBE                     __end_of_main:
   136                           	callstack 0
   137                           
   138 ;; *************** function _portsInit *****************
   139 ;; Defined at:
   140 ;;		line 70 in file "main.c"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;		None
   145 ;; Return value:  Size  Location     Type
   146 ;;                  1    wreg      void 
   147 ;; Registers used:
   148 ;;		wreg, status,2
   149 ;; Tracked objects:
   150 ;;		On entry : 0/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   154 ;;      Params:         0       0       0       0       0       0       0       0       0
   155 ;;      Locals:         0       0       0       0       0       0       0       0       0
   156 ;;      Temps:          0       0       0       0       0       0       0       0       0
   157 ;;      Totals:         0       0       0       0       0       0       0       0       0
   158 ;;Total ram usage:        0 bytes
   159 ;; Hardware stack levels used: 1
   160 ;; This function calls:
   161 ;;		Nothing
   162 ;; This function is called by:
   163 ;;		_main
   164 ;; This function uses a non-reentrant model
   165 ;;
   166                           
   167                           	psect	text1
   168  007FBE                     __ptext1:
   169                           	callstack 0
   170  007FBE                     _portsInit:
   171                           	callstack 30
   172  007FBE                     
   173                           ;main.c: 71:     ANSELA = digital;
   174  007FBE  0E00               	movlw	0
   175  007FC0  010F               	movlb	15	; () banked
   176  007FC2  6F5B               	movwf	91,b	;volatile
   177                           
   178                           ;main.c: 72:     TRISA = 0xF0;
   179  007FC4  0EF0               	movlw	240
   180  007FC6  6E92               	movwf	146,c	;volatile
   181                           
   182                           ;main.c: 73:     OSCCON = 0x74;
   183  007FC8  0E74               	movlw	116
   184  007FCA  6ED3               	movwf	211,c	;volatile
   185  007FCC                     
   186                           ; BSR set to: 15
   187  007FCC  0012               	return		;funcret
   188  007FCE                     __end_of_portsInit:
   189                           	callstack 0
   190                           
   191 ;; *************** function _LCD_init *****************
   192 ;; Defined at:
   193 ;;		line 157 in file "main.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;		None
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   207 ;;      Params:         0       0       0       0       0       0       0       0       0
   208 ;;      Locals:         0       0       0       0       0       0       0       0       0
   209 ;;      Temps:          0       0       0       0       0       0       0       0       0
   210 ;;      Totals:         0       0       0       0       0       0       0       0       0
   211 ;;Total ram usage:        0 bytes
   212 ;; Hardware stack levels used: 1
   213 ;; Hardware stack levels required when called: 1
   214 ;; This function calls:
   215 ;;		_LCD_cmd
   216 ;; This function is called by:
   217 ;;		_main
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text2
   222  007FE2                     __ptext2:
   223                           	callstack 0
   224  007FE2                     _LCD_init:
   225                           	callstack 29
   226  007FE2                     
   227                           ;main.c: 158:     LATC = 0;
   228  007FE2  0E00               	movlw	0
   229  007FE4  6E8B               	movwf	139,c	;volatile
   230  007FE6                     
   231                           ;main.c: 159:     TRISCbits.TRISC0 = 0;
   232  007FE6  9094               	bcf	148,0,c	;volatile
   233  007FE8                     
   234                           ;main.c: 160:     TRISCbits.TRISC2 = 0;
   235  007FE8  9494               	bcf	148,2,c	;volatile
   236  007FEA                     
   237                           ;main.c: 161:     TRISCbits.TRISC1 = 0;
   238  007FEA  9294               	bcf	148,1,c	;volatile
   239  007FEC                     
   240                           ;main.c: 162:     LCD_cmd(0x38);
   241  007FEC  0E38               	movlw	56
   242  007FEE  ECE7  F03F         	call	_LCD_cmd
   243  007FF2                     
   244                           ;main.c: 163:     LCD_cmd(0x0F);
   245  007FF2  0E0F               	movlw	15
   246  007FF4  ECE7  F03F         	call	_LCD_cmd
   247  007FF8                     
   248                           ;main.c: 164:     LCD_cmd(0x01);
   249  007FF8  0E01               	movlw	1
   250  007FFA  ECE7  F03F         	call	_LCD_cmd
   251  007FFE  0012               	return		;funcret
   252  008000                     __end_of_LCD_init:
   253                           	callstack 0
   254                           
   255 ;; *************** function _LCD_cmd *****************
   256 ;; Defined at:
   257 ;;		line 118 in file "main.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;  cx              1    wreg     unsigned char 
   260 ;; Auto vars:     Size  Location     Type
   261 ;;  cx              1    0[COMRAM] unsigned char 
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   271 ;;      Params:         0       0       0       0       0       0       0       0       0
   272 ;;      Locals:         1       0       0       0       0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0
   274 ;;      Totals:         1       0       0       0       0       0       0       0       0
   275 ;;Total ram usage:        1 bytes
   276 ;; Hardware stack levels used: 1
   277 ;; This function calls:
   278 ;;		Nothing
   279 ;; This function is called by:
   280 ;;		_LCD_init
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text3
   285  007FCE                     __ptext3:
   286                           	callstack 0
   287  007FCE                     _LCD_cmd:
   288                           	callstack 29
   289                           
   290                           ;incstack = 0
   291                           ;LCD_cmd@cx stored from wreg
   292  007FCE  6E01               	movwf	LCD_cmd@cx^0,c
   293  007FD0                     
   294                           ;main.c: 120:     LATCbits.LATC2 = 0;
   295  007FD0  948B               	bcf	139,2,c	;volatile
   296                           
   297                           ;main.c: 121:     LATCbits.LATC1 = 0;
   298  007FD2  928B               	bcf	139,1,c	;volatile
   299                           
   300                           ;main.c: 122:     LATCbits.LATC0 = 1;
   301  007FD4  808B               	bsf	139,0,c	;volatile
   302                           
   303                           ;main.c: 123:     __nop();
   304  007FD6  F000               	nop	
   305  007FD8                     
   306                           ;main.c: 124:     LATD = cx;
   307  007FD8  C001  FF8C         	movff	LCD_cmd@cx,3980	;volatile
   308  007FDC                     
   309                           ;main.c: 125:     __nop();
   310  007FDC  F000               	nop	
   311  007FDE                     
   312                           ;main.c: 126:     LATCbits.LATC0 = 0;
   313  007FDE  908B               	bcf	139,0,c	;volatile
   314  007FE0  0012               	return		;funcret
   315  007FE2                     __end_of_LCD_cmd:
   316                           	callstack 0
   317  0000                     
   318                           	psect	rparam
   319  0000                     
   320                           	psect	idloc
   321                           
   322                           ;Config register IDLOC0 @ 0x200000
   323                           ;	unspecified, using default values
   324  200000                     	org	2097152
   325  200000  FF                 	db	255
   326                           
   327                           ;Config register IDLOC1 @ 0x200001
   328                           ;	unspecified, using default values
   329  200001                     	org	2097153
   330  200001  FF                 	db	255
   331                           
   332                           ;Config register IDLOC2 @ 0x200002
   333                           ;	unspecified, using default values
   334  200002                     	org	2097154
   335  200002  FF                 	db	255
   336                           
   337                           ;Config register IDLOC3 @ 0x200003
   338                           ;	unspecified, using default values
   339  200003                     	org	2097155
   340  200003  FF                 	db	255
   341                           
   342                           ;Config register IDLOC4 @ 0x200004
   343                           ;	unspecified, using default values
   344  200004                     	org	2097156
   345  200004  FF                 	db	255
   346                           
   347                           ;Config register IDLOC5 @ 0x200005
   348                           ;	unspecified, using default values
   349  200005                     	org	2097157
   350  200005  FF                 	db	255
   351                           
   352                           ;Config register IDLOC6 @ 0x200006
   353                           ;	unspecified, using default values
   354  200006                     	org	2097158
   355  200006  FF                 	db	255
   356                           
   357                           ;Config register IDLOC7 @ 0x200007
   358                           ;	unspecified, using default values
   359  200007                     	org	2097159
   360  200007  FF                 	db	255
   361                           
   362                           	psect	config
   363                           
   364                           ;Config register CONFIG1L @ 0x300000
   365                           ;	PLL Selection
   366                           ;	PLLSEL = PLL4X, 4x clock multiplier
   367                           ;	PLL Enable Configuration bit
   368                           ;	CFGPLLEN = ON, PLL Enabled
   369                           ;	CPU System Clock Postscaler
   370                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   371                           ;	Low Speed USB mode with 48 MHz system clock
   372                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   373  300000                     	org	3145728
   374  300000  02                 	db	2
   375                           
   376                           ;Config register CONFIG1H @ 0x300001
   377                           ;	Oscillator Selection
   378                           ;	FOSC = INTOSCIO, Internal oscillator
   379                           ;	Primary Oscillator Shutdown
   380                           ;	PCLKEN = ON, Primary oscillator enabled
   381                           ;	Fail-Safe Clock Monitor
   382                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   383                           ;	Internal/External Oscillator Switchover
   384                           ;	IESO = OFF, Oscillator Switchover mode disabled
   385  300001                     	org	3145729
   386  300001  28                 	db	40
   387                           
   388                           ;Config register CONFIG2L @ 0x300002
   389                           ;	Power-up Timer Enable
   390                           ;	nPWRTEN = OFF, Power up timer disabled
   391                           ;	Brown-out Reset Enable
   392                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   393                           ;	Brown-out Reset Voltage
   394                           ;	BORV = 190, BOR set to 1.9V nominal
   395                           ;	Low-Power Brown-out Reset
   396                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   397  300002                     	org	3145730
   398  300002  5F                 	db	95
   399                           
   400                           ;Config register CONFIG2H @ 0x300003
   401                           ;	Watchdog Timer Enable bits
   402                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   403                           ;	Watchdog Timer Postscaler
   404                           ;	WDTPS = 32768, 1:32768
   405  300003                     	org	3145731
   406  300003  3C                 	db	60
   407                           
   408                           ; Padding undefined space
   409  300004                     	org	3145732
   410  300004  FF                 	db	255
   411                           
   412                           ;Config register CONFIG3H @ 0x300005
   413                           ;	CCP2 MUX bit
   414                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   415                           ;	PORTB A/D Enable bit
   416                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   417                           ;	Timer3 Clock Input MUX bit
   418                           ;	T3CMX = RC0, T3CKI function is on RC0
   419                           ;	SDO Output MUX bit
   420                           ;	SDOMX = RB3, SDO function is on RB3
   421                           ;	Master Clear Reset Pin Enable
   422                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   423  300005                     	org	3145733
   424  300005  D1                 	db	209
   425                           
   426                           ;Config register CONFIG4L @ 0x300006
   427                           ;	Stack Full/Underflow Reset
   428                           ;	STVREN = ON, Stack full/underflow will cause Reset
   429                           ;	Single-Supply ICSP Enable bit
   430                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   431                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   432                           ;	ICPRT = OFF, ICPORT disabled
   433                           ;	Extended Instruction Set Enable bit
   434                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   435                           ;	Background Debugger Enable bit
   436                           ;	DEBUG = 0x1, unprogrammed default
   437  300006                     	org	3145734
   438  300006  85                 	db	133
   439                           
   440                           ; Padding undefined space
   441  300007                     	org	3145735
   442  300007  FF                 	db	255
   443                           
   444                           ;Config register CONFIG5L @ 0x300008
   445                           ;	Block 0 Code Protect
   446                           ;	CP0 = OFF, Block 0 is not code-protected
   447                           ;	Block 1 Code Protect
   448                           ;	CP1 = OFF, Block 1 is not code-protected
   449                           ;	Block 2 Code Protect
   450                           ;	CP2 = OFF, Block 2 is not code-protected
   451                           ;	Block 3 Code Protect
   452                           ;	CP3 = OFF, Block 3 is not code-protected
   453  300008                     	org	3145736
   454  300008  0F                 	db	15
   455                           
   456                           ;Config register CONFIG5H @ 0x300009
   457                           ;	Boot Block Code Protect
   458                           ;	CPB = OFF, Boot block is not code-protected
   459                           ;	Data EEPROM Code Protect
   460                           ;	CPD = OFF, Data EEPROM is not code-protected
   461  300009                     	org	3145737
   462  300009  C0                 	db	192
   463                           
   464                           ;Config register CONFIG6L @ 0x30000A
   465                           ;	Block 0 Write Protect
   466                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   467                           ;	Block 1 Write Protect
   468                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   469                           ;	Block 2 Write Protect
   470                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   471                           ;	Block 3 Write Protect
   472                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   473  30000A                     	org	3145738
   474  30000A  0F                 	db	15
   475                           
   476                           ;Config register CONFIG6H @ 0x30000B
   477                           ;	Configuration Registers Write Protect
   478                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   479                           ;	Boot Block Write Protect
   480                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   481                           ;	Data EEPROM Write Protect
   482                           ;	WRTD = OFF, Data EEPROM is not write-protected
   483  30000B                     	org	3145739
   484  30000B  E0                 	db	224
   485                           
   486                           ;Config register CONFIG7L @ 0x30000C
   487                           ;	Block 0 Table Read Protect
   488                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   489                           ;	Block 1 Table Read Protect
   490                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   491                           ;	Block 2 Table Read Protect
   492                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   493                           ;	Block 3 Table Read Protect
   494                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   495  30000C                     	org	3145740
   496  30000C  0F                 	db	15
   497                           
   498                           ;Config register CONFIG7H @ 0x30000D
   499                           ;	Boot Block Table Read Protect
   500                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   501  30000D                     	org	3145741
   502  30000D  40                 	db	64
   503                           tosu	equ	0xFFF
   504                           tosh	equ	0xFFE
   505                           tosl	equ	0xFFD
   506                           stkptr	equ	0xFFC
   507                           pclatu	equ	0xFFB
   508                           pclath	equ	0xFFA
   509                           pcl	equ	0xFF9
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           prodh	equ	0xFF4
   515                           prodl	equ	0xFF3
   516                           indf0	equ	0xFEF
   517                           postinc0	equ	0xFEE
   518                           postdec0	equ	0xFED
   519                           preinc0	equ	0xFEC
   520                           plusw0	equ	0xFEB
   521                           fsr0h	equ	0xFEA
   522                           fsr0l	equ	0xFE9
   523                           wreg	equ	0xFE8
   524                           indf1	equ	0xFE7
   525                           postinc1	equ	0xFE6
   526                           postdec1	equ	0xFE5
   527                           preinc1	equ	0xFE4
   528                           plusw1	equ	0xFE3
   529                           fsr1h	equ	0xFE2
   530                           fsr1l	equ	0xFE1
   531                           bsr	equ	0xFE0
   532                           indf2	equ	0xFDF
   533                           postinc2	equ	0xFDE
   534                           postdec2	equ	0xFDD
   535                           preinc2	equ	0xFDC
   536                           plusw2	equ	0xFDB
   537                           fsr2h	equ	0xFDA
   538                           fsr2l	equ	0xFD9
   539                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _LCD_init->_LCD_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                           _LCD_init
                          _portsInit
 ---------------------------------------------------------------------------------
 (1) _portsInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      15
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_cmd
   _portsInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      1       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 08 23:37:03 2021

                     l45 7FBA                       l48 7FCC                       l83 7FE0  
                     l95 7FFE                      l817 7FB2                      l771 7FD0  
                    l773 7FD8                      l781 7FE2                      l775 7FDC  
                    l791 7FF2                      l783 7FE6                      l777 7FDE  
                    l793 7FF8                      l785 7FE8                      l787 7FEA  
                    l779 7FBE                      l789 7FEC          __end_of_LCD_cmd 7FE2  
                   _LATC 000F8B                     _LATD 000F8C                     _main 7FB2  
                   start 0000             ___param_bank 000000         __end_of_LCD_init 8000  
                  ?_main 0001                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISD 000F95          __initialization 7FA8             __end_of_main 7FBE  
                 ??_main 0002            __activetblptr 000002                ??_LCD_cmd 0001  
                 _ANSELA 000F5B                   _OSCCON 000FD3                   isa$std 000001  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7FA8  
              ?_LCD_init 0001            ___rparam_used 000001           __pcstackCOMRAM 0001  
              LCD_cmd@cx 0001               ??_LCD_init 0002                  _LCD_cmd 7FCE  
     __size_of_portsInit 0010                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7FA8                  __ramtop 0800                  __ptext0 7FB2  
                __ptext1 7FBE                  __ptext2 7FE2                  __ptext3 7FCE  
   end_of_initialization 7FA8            __Lmediumconst 0000        __end_of_portsInit 7FCE  
              _PORTAbits 000F80                _TRISCbits 000F94        __size_of_LCD_init 001E  
    start_initialization 7FA8                 ?_LCD_cmd 0001                 _LATAbits 000F89  
               _LATCbits 000F8B                 _LCD_init 7FE2                _portsInit 7FBE  
       __size_of_LCD_cmd 0014                 __Hrparam 0000                 __Lrparam 0000  
             ?_portsInit 0001            __size_of_main 000C                 isa$xinst 000000  
            ??_portsInit 0001  
