

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 02 02:12:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.31
    15                           ; Generated 13/10/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F45K50 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ANSELB	set	3932
    50  0000                     _ANSELA	set	3931
    51  0000                     _TRISBbits	set	3987
    52  0000                     _TRISAbits	set	3986
    53  0000                     _LATAbits	set	3977
    54  0000                     _PORTBbits	set	3969
    55                           
    56                           ; #config settings
    57                           
    58                           	psect	cinit
    59  007F98                     __pcinit:
    60                           	callstack 0
    61  007F98                     start_initialization:
    62                           	callstack 0
    63  007F98                     __initialization:
    64                           	callstack 0
    65  007F98                     end_of_initialization:
    66                           	callstack 0
    67  007F98                     __end_of__initialization:
    68                           	callstack 0
    69  007F98  0100               	movlb	0
    70  007F9A  EFD8  F03F         	goto	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMRAM
    73  000001                     __pcstackCOMRAM:
    74                           	callstack 0
    75  000001                     ??_main:
    76                           
    77                           ; 1 bytes @ 0x0
    78  000001                     	ds	2
    79                           
    80 ;;
    81 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    82 ;;
    83 ;; *************** function _main *****************
    84 ;; Defined at:
    85 ;;		line 26 in file "main.c"
    86 ;; Parameters:    Size  Location     Type
    87 ;;		None
    88 ;; Auto vars:     Size  Location     Type
    89 ;;		None
    90 ;; Return value:  Size  Location     Type
    91 ;;                  1    wreg      void 
    92 ;; Registers used:
    93 ;;		wreg, status,2, cstack
    94 ;; Tracked objects:
    95 ;;		On entry : 0/0
    96 ;;		On exit  : 0/0
    97 ;;		Unchanged: 0/0
    98 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    99 ;;      Params:         0       0       0       0       0       0       0       0       0
   100 ;;      Locals:         0       0       0       0       0       0       0       0       0
   101 ;;      Temps:          2       0       0       0       0       0       0       0       0
   102 ;;      Totals:         2       0       0       0       0       0       0       0       0
   103 ;;Total ram usage:        2 bytes
   104 ;; Hardware stack levels required when called:    1
   105 ;; This function calls:
   106 ;;		_portsInit
   107 ;; This function is called by:
   108 ;;		Startup code after reset
   109 ;; This function uses a non-reentrant model
   110 ;;
   111                           
   112                           	psect	text0
   113  007FB0                     __ptext0:
   114                           	callstack 0
   115  007FB0                     _main:
   116                           	callstack 30
   117  007FB0                     
   118                           ;main.c: 27:     portsInit();
   119  007FB0  ECCF  F03F         	call	_portsInit	;wreg free
   120  007FB4                     l715:
   121                           
   122                           ;main.c: 30:         if( PORTBbits.RB4 == pushed )
   123  007FB4  B881               	btfsc	129,4,c	;volatile
   124  007FB6  EFDF  F03F         	goto	u11
   125  007FBA  EFE1  F03F         	goto	u10
   126  007FBE                     u11:
   127  007FBE  EFE4  F03F         	goto	l22
   128  007FC2                     u10:
   129  007FC2                     
   130                           ;main.c: 31:             LATAbits.LATA7 = led_OFF;
   131  007FC2  9E89               	bcf	137,7,c	;volatile
   132  007FC4  EFE5  F03F         	goto	l23
   133  007FC8                     l22:
   134                           
   135                           ;main.c: 33:             LATAbits.LATA7 = led_ON;
   136  007FC8  8E89               	bsf	137,7,c	;volatile
   137  007FCA                     l23:
   138                           
   139                           ;main.c: 34:         LATAbits.LATA4 = led_ON;
   140  007FCA  8889               	bsf	137,4,c	;volatile
   141  007FCC                     
   142                           ;main.c: 35:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   143  007FCC  0E02               	movlw	2
   144  007FCE  6E02               	movwf	(??_main+1)^0,c
   145  007FD0  0E45               	movlw	69
   146  007FD2  6E01               	movwf	??_main^0,c
   147  007FD4  0EAA               	movlw	170
   148  007FD6                     u27:
   149  007FD6  2EE8               	decfsz	wreg,f,c
   150  007FD8  D7FE               	bra	u27
   151  007FDA  2E01               	decfsz	??_main^0,f,c
   152  007FDC  D7FC               	bra	u27
   153  007FDE  2E02               	decfsz	(??_main+1)^0,f,c
   154  007FE0  D7FA               	bra	u27
   155                           
   156                           ;main.c: 36:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   157  007FE2  0E02               	movlw	2
   158  007FE4  6E02               	movwf	(??_main+1)^0,c
   159  007FE6  0E45               	movlw	69
   160  007FE8  6E01               	movwf	??_main^0,c
   161  007FEA  0EAA               	movlw	170
   162  007FEC                     u37:
   163  007FEC  2EE8               	decfsz	wreg,f,c
   164  007FEE  D7FE               	bra	u37
   165  007FF0  2E01               	decfsz	??_main^0,f,c
   166  007FF2  D7FC               	bra	u37
   167  007FF4  2E02               	decfsz	(??_main+1)^0,f,c
   168  007FF6  D7FA               	bra	u37
   169  007FF8  EFDA  F03F         	goto	l715
   170  007FFC  EF00  F000         	goto	start
   171  008000                     __end_of_main:
   172                           	callstack 0
   173                           
   174 ;; *************** function _portsInit *****************
   175 ;; Defined at:
   176 ;;		line 41 in file "main.c"
   177 ;; Parameters:    Size  Location     Type
   178 ;;		None
   179 ;; Auto vars:     Size  Location     Type
   180 ;;		None
   181 ;; Return value:  Size  Location     Type
   182 ;;                  1    wreg      void 
   183 ;; Registers used:
   184 ;;		wreg, status,2
   185 ;; Tracked objects:
   186 ;;		On entry : 0/0
   187 ;;		On exit  : 0/0
   188 ;;		Unchanged: 0/0
   189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   190 ;;      Params:         0       0       0       0       0       0       0       0       0
   191 ;;      Locals:         0       0       0       0       0       0       0       0       0
   192 ;;      Temps:          0       0       0       0       0       0       0       0       0
   193 ;;      Totals:         0       0       0       0       0       0       0       0       0
   194 ;;Total ram usage:        0 bytes
   195 ;; Hardware stack levels used:    1
   196 ;; This function calls:
   197 ;;		Nothing
   198 ;; This function is called by:
   199 ;;		_main
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           	psect	text1
   204  007F9E                     __ptext1:
   205                           	callstack 0
   206  007F9E                     _portsInit:
   207                           	callstack 30
   208  007F9E                     
   209                           ;main.c: 42:     ANSELA = digital;
   210  007F9E  0E00               	movlw	0
   211  007FA0  010F               	movlb	15	; () banked
   212  007FA2  6F5B               	movwf	91,b	;volatile
   213  007FA4                     
   214                           ; BSR set to: 15
   215                           ;main.c: 43:     TRISAbits.TRISA4 = output;
   216  007FA4  9892               	bcf	146,4,c	;volatile
   217  007FA6                     
   218                           ; BSR set to: 15
   219                           ;main.c: 44:     TRISAbits.TRISA7 = output;
   220  007FA6  9E92               	bcf	146,7,c	;volatile
   221                           
   222                           ;main.c: 45:     ANSELB = digital;
   223  007FA8  0E00               	movlw	0
   224  007FAA  6F5C               	movwf	92,b	;volatile
   225  007FAC                     
   226                           ; BSR set to: 15
   227                           ;main.c: 46:     TRISBbits.TRISB4 = input;
   228  007FAC  8893               	bsf	147,4,c	;volatile
   229  007FAE                     
   230                           ; BSR set to: 15
   231  007FAE  0012               	return		;funcret
   232  007FB0                     __end_of_portsInit:
   233                           	callstack 0
   234  0000                     
   235                           	psect	rparam
   236  0000                     
   237                           	psect	idloc
   238                           
   239                           ;Config register IDLOC0 @ 0x200000
   240                           ;	unspecified, using default values
   241  200000                     	org	2097152
   242  200000  FF                 	db	255
   243                           
   244                           ;Config register IDLOC1 @ 0x200001
   245                           ;	unspecified, using default values
   246  200001                     	org	2097153
   247  200001  FF                 	db	255
   248                           
   249                           ;Config register IDLOC2 @ 0x200002
   250                           ;	unspecified, using default values
   251  200002                     	org	2097154
   252  200002  FF                 	db	255
   253                           
   254                           ;Config register IDLOC3 @ 0x200003
   255                           ;	unspecified, using default values
   256  200003                     	org	2097155
   257  200003  FF                 	db	255
   258                           
   259                           ;Config register IDLOC4 @ 0x200004
   260                           ;	unspecified, using default values
   261  200004                     	org	2097156
   262  200004  FF                 	db	255
   263                           
   264                           ;Config register IDLOC5 @ 0x200005
   265                           ;	unspecified, using default values
   266  200005                     	org	2097157
   267  200005  FF                 	db	255
   268                           
   269                           ;Config register IDLOC6 @ 0x200006
   270                           ;	unspecified, using default values
   271  200006                     	org	2097158
   272  200006  FF                 	db	255
   273                           
   274                           ;Config register IDLOC7 @ 0x200007
   275                           ;	unspecified, using default values
   276  200007                     	org	2097159
   277  200007  FF                 	db	255
   278                           
   279                           	psect	config
   280                           
   281                           ;Config register CONFIG1L @ 0x300000
   282                           ;	PLL Selection
   283                           ;	PLLSEL = PLL4X, 4x clock multiplier
   284                           ;	PLL Enable Configuration bit
   285                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   286                           ;	CPU System Clock Postscaler
   287                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   288                           ;	Low Speed USB mode with 48 MHz system clock
   289                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   290  300000                     	org	3145728
   291  300000  00                 	db	0
   292                           
   293                           ;Config register CONFIG1H @ 0x300001
   294                           ;	Oscillator Selection
   295                           ;	FOSC = INTOSCIO, Internal oscillator
   296                           ;	Primary Oscillator Shutdown
   297                           ;	PCLKEN = ON, Primary oscillator enabled
   298                           ;	Fail-Safe Clock Monitor
   299                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   300                           ;	Internal/External Oscillator Switchover
   301                           ;	IESO = OFF, Oscillator Switchover mode disabled
   302  300001                     	org	3145729
   303  300001  28                 	db	40
   304                           
   305                           ;Config register CONFIG2L @ 0x300002
   306                           ;	Power-up Timer Enable
   307                           ;	nPWRTEN = OFF, Power up timer disabled
   308                           ;	Brown-out Reset Enable
   309                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   310                           ;	Brown-out Reset Voltage
   311                           ;	BORV = 190, BOR set to 1.9V nominal
   312                           ;	Low-Power Brown-out Reset
   313                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   314  300002                     	org	3145730
   315  300002  5F                 	db	95
   316                           
   317                           ;Config register CONFIG2H @ 0x300003
   318                           ;	Watchdog Timer Enable bits
   319                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   320                           ;	Watchdog Timer Postscaler
   321                           ;	WDTPS = 32768, 1:32768
   322  300003                     	org	3145731
   323  300003  3C                 	db	60
   324                           
   325                           ; Padding undefined space
   326  300004                     	org	3145732
   327  300004  FF                 	db	255
   328                           
   329                           ;Config register CONFIG3H @ 0x300005
   330                           ;	CCP2 MUX bit
   331                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   332                           ;	PORTB A/D Enable bit
   333                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   334                           ;	Timer3 Clock Input MUX bit
   335                           ;	T3CMX = RC0, T3CKI function is on RC0
   336                           ;	SDO Output MUX bit
   337                           ;	SDOMX = RB3, SDO function is on RB3
   338                           ;	Master Clear Reset Pin Enable
   339                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   340  300005                     	org	3145733
   341  300005  D3                 	db	211
   342                           
   343                           ;Config register CONFIG4L @ 0x300006
   344                           ;	Stack Full/Underflow Reset
   345                           ;	STVREN = ON, Stack full/underflow will cause Reset
   346                           ;	Single-Supply ICSP Enable bit
   347                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   348                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   349                           ;	ICPRT = OFF, ICPORT disabled
   350                           ;	Extended Instruction Set Enable bit
   351                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   352                           ;	Background Debugger Enable bit
   353                           ;	DEBUG = 0x1, unprogrammed default
   354  300006                     	org	3145734
   355  300006  85                 	db	133
   356                           
   357                           ; Padding undefined space
   358  300007                     	org	3145735
   359  300007  FF                 	db	255
   360                           
   361                           ;Config register CONFIG5L @ 0x300008
   362                           ;	Block 0 Code Protect
   363                           ;	CP0 = OFF, Block 0 is not code-protected
   364                           ;	Block 1 Code Protect
   365                           ;	CP1 = OFF, Block 1 is not code-protected
   366                           ;	Block 2 Code Protect
   367                           ;	CP2 = OFF, Block 2 is not code-protected
   368                           ;	Block 3 Code Protect
   369                           ;	CP3 = OFF, Block 3 is not code-protected
   370  300008                     	org	3145736
   371  300008  0F                 	db	15
   372                           
   373                           ;Config register CONFIG5H @ 0x300009
   374                           ;	Boot Block Code Protect
   375                           ;	CPB = OFF, Boot block is not code-protected
   376                           ;	Data EEPROM Code Protect
   377                           ;	CPD = OFF, Data EEPROM is not code-protected
   378  300009                     	org	3145737
   379  300009  C0                 	db	192
   380                           
   381                           ;Config register CONFIG6L @ 0x30000A
   382                           ;	Block 0 Write Protect
   383                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   384                           ;	Block 1 Write Protect
   385                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   386                           ;	Block 2 Write Protect
   387                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   388                           ;	Block 3 Write Protect
   389                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   390  30000A                     	org	3145738
   391  30000A  0F                 	db	15
   392                           
   393                           ;Config register CONFIG6H @ 0x30000B
   394                           ;	Configuration Registers Write Protect
   395                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   396                           ;	Boot Block Write Protect
   397                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   398                           ;	Data EEPROM Write Protect
   399                           ;	WRTD = OFF, Data EEPROM is not write-protected
   400  30000B                     	org	3145739
   401  30000B  E0                 	db	224
   402                           
   403                           ;Config register CONFIG7L @ 0x30000C
   404                           ;	Block 0 Table Read Protect
   405                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   406                           ;	Block 1 Table Read Protect
   407                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   408                           ;	Block 2 Table Read Protect
   409                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   410                           ;	Block 3 Table Read Protect
   411                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   412  30000C                     	org	3145740
   413  30000C  0F                 	db	15
   414                           
   415                           ;Config register CONFIG7H @ 0x30000D
   416                           ;	Boot Block Table Read Protect
   417                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   418  30000D                     	org	3145741
   419  30000D  40                 	db	64
   420                           tosu	equ	0xFFF
   421                           tosh	equ	0xFFE
   422                           tosl	equ	0xFFD
   423                           stkptr	equ	0xFFC
   424                           pclatu	equ	0xFFB
   425                           pclath	equ	0xFFA
   426                           pcl	equ	0xFF9
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           prodh	equ	0xFF4
   432                           prodl	equ	0xFF3
   433                           indf0	equ	0xFEF
   434                           postinc0	equ	0xFEE
   435                           postdec0	equ	0xFED
   436                           preinc0	equ	0xFEC
   437                           plusw0	equ	0xFEB
   438                           fsr0h	equ	0xFEA
   439                           fsr0l	equ	0xFE9
   440                           wreg	equ	0xFE8
   441                           indf1	equ	0xFE7
   442                           postinc1	equ	0xFE6
   443                           postdec1	equ	0xFE5
   444                           preinc1	equ	0xFE4
   445                           plusw1	equ	0xFE3
   446                           fsr1h	equ	0xFE2
   447                           fsr1l	equ	0xFE1
   448                           bsr	equ	0xFE0
   449                           indf2	equ	0xFDF
   450                           postinc2	equ	0xFDE
   451                           postdec2	equ	0xFDD
   452                           preinc2	equ	0xFDC
   453                           plusw2	equ	0xFDB
   454                           fsr2h	equ	0xFDA
   455                           fsr2l	equ	0xFD9
   456                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                          _portsInit
 ---------------------------------------------------------------------------------
 (1) _portsInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _portsInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 02 02:12:41 2021

                     l22 7FC8                       l23 7FCA                       l29 7FAE  
                     u10 7FC2                       u11 7FBE                       u27 7FD6  
                     u37 7FEC                      l711 7FAC                      l705 7F9E  
                    l713 7FB0                      l707 7FA4                      l715 7FB4  
                    l709 7FA6                      l717 7FC2                      l719 7FCC  
                    wreg 000FE8                     _main 7FB0                     start 0000  
           ___param_bank 000000                    ?_main 0001          __initialization 7F98  
           __end_of_main 8000                   ??_main 0001            __activetblptr 000000  
                 _ANSELA 000F5B                   _ANSELB 000F5C               __accesstop 0060  
__end_of__initialization 7F98            ___rparam_used 000001           __pcstackCOMRAM 0001  
     __size_of_portsInit 0012                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F98                  __ramtop 0800                  __ptext0 7FB0  
                __ptext1 7F9E     end_of_initialization 7F98        __end_of_portsInit 7FB0  
              _PORTBbits 000F81                _TRISAbits 000F92                _TRISBbits 000F93  
    start_initialization 7F98                 _LATAbits 000F89                _portsInit 7F9E  
               __Hrparam 0000                 __Lrparam 0000               ?_portsInit 0001  
          __size_of_main 0050              ??_portsInit 0001  
